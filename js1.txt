변수 선언 중복 변수 없도록 하는 명령어 let
const 절대로 바뀌지 않는 상수
typeof 문자 타입확인

변수를넣을땐 ``쓰기 액티브로 바꾸기 $넣기

alert 알려줌 메세지만 뛰우기
prompt 입력 받음 2개의 인수를 입력받을수 있음
confirm 확인 받음 확인받때 쓸수있는 함수 확인 취소가 뜸 트루 펄스값이 나옴
단점 스크립트 일시 정지
스타일링 x

Sting() 문자형
Number() 숫자형 true와 false 는 1과 0으로
Boolean() 불린형 (숫자 0 , 빈 문자열 '', null, undefined, NaN)들은 false로 나타남
형변환이 필요한이유 자료형이 다를경우를 위해
prompt 입력 문자형으로만 출력됨

|| or 여러개의 값중 하나라도 true면 true 로 표현 모든 값이 false일때만 false
&& and 모든값이 true일때만 true 하나로도 false면 false
! not 은 true면 false로 false면 true

반복문 loop 동일한 작업을 여러번

for (let i = 0; i < 10; i++)
      초기값   조건 코드실행후작업

while 문

do while문 조건을 아래로 표시하는 반복문

break 멈추고 빠져나옴
continue 다음 반복으로 점프

switch문 if else를 알면 쓸필요없으나 조건문이 많을때 유용항 case :
break; 가없으면 다실행됨
defalt: 사용해서 else 를 대체함

function 함수생성
매개변수로 바꿔주면서 함수에 넣어준다

함수 내에서만 사용가능한 함수 지역변수
모든곳에서 사용가능한 함수 전역변수
지역변수를 사용하는 것이좋다.

return 리턴 오른쪽 값을 반환한다.
리턴문이 없어도 undefine를 반환한다.

함수값은 읽기 쉽고 어떤 동작인지 알 수 있게 네이밍
이게 함수 선언문 형식
어디서든지 호출 가능
인터프리터 언어
위에서 아래로 호출하는 형식

함수표현식
코드에 도달하면 생성
모든 코드를 확인하고 호출

화살표 함수
명령어로( => ) function 대체
일반함수와 달리 자신의 this를 가지지 않음
화살표 함수 내부에서 this 사용하면 외부의 this값을 가져옴

object
접근
minje.name .으로 접근
minje['age'] []으로 접근

추가
minje.hair ='black';
minje.['hair'] = 'balck';

삭제
delete minje.hair;

오브젝트 단축 프로퍼티
선언이 되어 있다면
name : name,
age : age,
없이
name, 
age
표현가능

존재여부 확인
''를 사용하여
'age' in minje
있으면 true 없으면 false

객체안에 있는 오브젝트를 부를땐 this.
this는 복잡함

 array 배열
.length 배열의 길이
.push() 배열 끝에 추가
.pop() 배열끝 제거
.shift 제거
.unshift 추가
배열 반복문
for(let index =0; index <day.length; index++)

참조 클론코딩 https://github.com/seondal/Clone-Youtube-Web
